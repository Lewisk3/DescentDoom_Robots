class MediumHulk : DescentDrone replaces HellKnight
{
	DroneArm leftArm;
	DroneArm rightArm;
	int missileSide;

	Default
	{
		Health 100;
		Radius 30;
		Height 30;
		Mass 1100;
		Speed 0.6;
		DropItem "Descent_ConMissile", 30, 1;
		DropItem "Descent_ConMissile", 15, 2;
		DropItem "Descent_ConMissile", 5, 3;
		DropItem "Descent_ConMissileBundle", 2, 1;

		PainChance 8;
		
		AttackSound "Drone/Fire";
		SeeSound "MediumHulk/See";
		
		DescentEnemy.turnSpeed 4.5;
		DescentEnemy.MoveFriction 0.06;
		DescentDrone.HeightOffs 15;
		DescentEnemy.Aggression 0.2;
		DescentEnemy.ScorePoints 500;
		DescentEnemy.DodgeChance 20;
	}
	
	override void SetupWeapons()
	{
		vector3 armsPivot = (0,0,0); // Will be useful if we have to re-align the body model.
		leftArm  = DroneArm.SetupArms(self, "MediumHulk_LeftArm",  armsPivot, (-2,-22,7));
		rightArm = DroneArm.SetupArms(self, "MediumHulk_RightArm", armsPivot, (-2, 22,7));
		
		equipWeapon(1, "DSCProj_ConMissile", 25, -23, -14, "RedMuzzleFlash", tag:"missile launcher #1");
		equipWeapon(2, "DSCProj_ConMissile", 25,  23, -14, "RedMuzzleFlash", tag:"missile launcher #2");
	}
	
	void A_SwingArms(int armSide, double p, double spd)
	{
		switch(armSide)
		{
			case 0:	 leftArm.animateLocalAngles.y = p;  leftArm.animateSpeed = spd; break;
			case 1:	rightArm.animateLocalAngles.y = p; rightArm.animateSpeed = spd; break;
			default:
			{
				leftArm.animateLocalAngles.y = rightArm.animateLocalAngles.y = p;  
				leftArm.animateSpeed = rightArm.animateSpeed = spd;
			}
		}
	}
	
	States
	{
		Spawn.Look:
			MODL A 10 A_DescentLook(lookFOV:135);
		Loop;
		
		See:
			MODL A 1 A_PlaySeeSound();
		Chase:
			MODL A 3 A_DescentChase(20, 600, 200, 10, false);
		Loop;
			
		Attack: 
			TNT1 A 0 
			{
				missileSide = randompick[MEDHULKRNG](1,2);
				
				A_FireWeapons(missileSide, (0,0,5), damageOverride:20); 
				A_SwingArms(missileSide, 20, 0.8);
			}
			MODL AAAA 2;
			TNT1 A 0 A_SwingArms(missileSide, 0, 0.2);
			MODL A 10 A_RandomReFire(20);
		goto Chase;
			
		Pain:
			MODL A 12 A_DamageRecoil(6);
		Goto Spawn;
		
		Death:
			TNT1 A 0 
			{
				leftArm.Eject();
				rightArm.Eject();
			}
			MODL AAAAAAAAAAAAAAAAAAA 1 
			{
				A_DamageRecoil(3);
				RandomExplosions(4, radius);
			}
			TNT1 A 0 A_DropItems();
			MODL A 4 Spawn("EnemyExplosion", pos);
		Stop;
	}
}

// Cloaked variant
class CloakedHulk : MediumHulk
{
	Default
	{
		Health 150;
		DropItem "Descent_ConMissile", 50, 1;
		DropItem "Descent_ConMissile", 25, 2;
		DropItem "Descent_ConMissile", 10, 3;
		DropItem "Descent_ConMissileBundle", 5, 1;
		DropItem "CloakDevice", 5, 1;
		DescentEnemy.ScorePoints 700;
		
		SeeSound "MediumHulk/Cloaked/See";
	}
	
	override void SetupWeapons()
	{
		super.SetupWeapons();
		
		A_SetRenderStyle(0.22, STYLE_TranslucentStencil);
		SetShade("#C0A0A0A0");
	}
}

// Modeldef shenanigans
class MediumHulk_LeftArm : DroneArm {}
class MediumHulk_RightArm : DroneArm {}
