
class MediumLifter : DescentDrone replaces Demon
{
	DroneArm leftArm;
	DroneArm rightArm;

	Default
	{
		Health 100;
		Radius 20;
		Height 20;
		Mass 300;
		Speed 7;
		DropItem "ShieldsBoost", 20, 2;
		
		PainChance 20;
		
		SeeSound "MediumLifter/See";
		AttackSound "Lifter/Attack";
		
		DescentEnemy.turnSpeed 3.0;
		DescentEnemy.MoveFriction 0.1;
		DescentDrone.HeightOffs 10;
		DescentEnemy.Aggression 0;
		DescentEnemy.ScorePoints 500;
		DescentEnemy.DodgeChance 0;
	}
	
	override void SetupWeapons()
	{
		vector3 armsPivot = (0,0,0); // Will be useful if we have to re-align the body model.
		leftArm  = DroneArm.SetupArms(self, "MediumLifter_LeftArm",  armsPivot, (0,-5,0));
		rightArm = DroneArm.SetupArms(self, "MediumLifter_RightArm", armsPivot, (0, 5,0));
	}
	
	void A_SwingArms(double p, double spd)
	{
		leftArm.animateLocalAngles.y = rightArm.animateLocalAngles.y = p;
		leftArm.animateSpeed = rightArm.animateSpeed = spd;
	}
	
	States
	{
		Spawn.Look:
			MODL A 10 A_DescentLook(lookFOV:90);
		Loop;
		
		See:
			MODL A 1 A_PlaySeeSound();
		Chase:
			MODL A 3 A_DescentChase(100, 96, 32, 20, false);
		Loop;
			
		Attack: // In this case, Melee.
			TNT1 A 0 
			{
				A_PlayAttackSound();
				A_SwingArms(-70, 0.2);
			}
			MODL A 4;
			TNT1 A 0 A_SwingArms(60, 0.8);
			MODL AA 2 A_DroneMelee(4, 100, 50);  
			MODL A 4;
			TNT1 A 0 
			{
				A_SwingArms(-10, 0.5);
				return A_JumpIf(targetDistance > (80*80), "Attack.Finish");
			}
			
			MODL A 4 A_PlayAttackSound();
			TNT1 A 0 A_SwingArms(60, 0.8);
			MODL AA 2 A_DroneMelee(4, 100, 50);  
			MODL A 4;
			TNT1 A 0 
			{
				A_SwingArms(-10, 0.5);
				return A_JumpIf(targetDistance > (80*80), "Attack.Finish");
			}
			
			MODL A 4 A_PlayAttackSound();
			TNT1 A 0 A_SwingArms(60, 0.8);
			MODL AA 2 A_DroneMelee(4, 100, 50);  
			MODL A 4;
		Attack.Finish:
			TNT1 A 0 A_SwingArms(0, 0.2);
			MODL A 10;
		goto Chase;
			
		Pain:
			MODL A 12 A_DamageRecoil(6);
		Goto Spawn;
		
		Death:
			TNT1 A 0 
			{
				leftArm.Eject();
				rightArm.Eject();
			}
			MODL AAAAAAAAAAAAAAAAAAA 1 
			{
				A_DamageRecoil(3);
				RandomExplosions(4, radius);
			}
			TNT1 A 0 A_DropItems();
			MODL A 4 Spawn("EnemyExplosion", pos);
		Stop;
	}
}

// Cloaked variant
class CloakedLifter : MediumLifter replaces Spectre
{
	Default
	{
		Health 100;
		Radius 20;
		Height 20;
		Mass 300;
		Speed 7;
		DropItem "ShieldsBoost", 20, 1;
		DropItem "CloakDevice", 5, 1;
		
		PainChance 20;
		
		SeeSound "";
		AttackSound "Lifter/Attack";
		
		DescentEnemy.turnSpeed 3.0;
		DescentEnemy.MoveFriction 0.1;
		DescentDrone.HeightOffs 10;
		DescentEnemy.Aggression 0;
		DescentEnemy.ScorePoints 1000;
		DescentEnemy.DodgeChance 0;
	}
	
	override void SetupWeapons()
	{
		super.SetupWeapons();
		
		A_SetRenderStyle(0.22, STYLE_TranslucentStencil);
		SetShade("#C0A0A0A0");
	}
}

// Modeldef shenanigans
class MediumLifter_LeftArm : DroneArm {}
class MediumLifter_RightArm : DroneArm {}